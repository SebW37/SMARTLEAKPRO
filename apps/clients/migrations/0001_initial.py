# Generated by Django 4.2.7 on 2025-09-08 11:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_number', models.CharField(help_text='Numéro unique généré automatiquement', max_length=20, unique=True, verbose_name='Numéro client')),
                ('name', models.CharField(max_length=200, verbose_name='Raison sociale / Nom')),
                ('client_type', models.CharField(choices=[('individual', 'Particulier'), ('company', 'Entreprise'), ('public', 'Collectivité'), ('syndic', 'Syndic')], default='individual', max_length=20, verbose_name='Type')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif/Suspendu'), ('prospect', 'Prospect'), ('archived', 'Archivé')], default='active', max_length=20, verbose_name='Statut')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email principal')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone principal')),
                ('secondary_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email secondaire')),
                ('secondary_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone secondaire')),
                ('address', models.TextField(verbose_name='Adresse principale')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Code postal')),
                ('country', models.CharField(default='France', max_length=100, verbose_name='Pays')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('contract_type', models.CharField(blank=True, choices=[('maintenance', 'Maintenance'), ('detection', 'Détection de fuites'), ('emergency', 'Urgence'), ('consulting', 'Conseil'), ('other', 'Autre')], max_length=20, null=True, verbose_name='Type de contrat')),
                ('contract_start_date', models.DateField(blank=True, null=True, verbose_name='Date début contrat')),
                ('contract_end_date', models.DateField(blank=True, null=True, verbose_name='Date fin contrat')),
                ('billing_address', models.TextField(blank=True, null=True, verbose_name='Adresse de facturation')),
                ('billing_city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ville facturation')),
                ('billing_postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='CP facturation')),
                ('siret', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message='SIRET doit contenir 14 chiffres', regex='^\\d{14}$')], verbose_name='SIRET')),
                ('siren', models.CharField(blank=True, max_length=9, null=True, validators=[django.core.validators.RegexValidator(message='SIREN doit contenir 9 chiffres', regex='^\\d{9}$')], verbose_name='SIREN')),
                ('vat_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro TVA')),
                ('preferred_payment_method', models.CharField(blank=True, choices=[('bank_transfer', 'Virement bancaire'), ('check', 'Chèque'), ('card', 'Carte bancaire'), ('cash', 'Espèces'), ('other', 'Autre')], max_length=20, null=True, verbose_name='Mode de règlement préféré')),
                ('bank_details', models.TextField(blank=True, null=True, verbose_name='Coordonnées bancaires')),
                ('visit_preferences', models.TextField(blank=True, null=True, verbose_name='Préférences de visite')),
                ('access_constraints', models.TextField(blank=True, null=True, verbose_name="Contraintes d'accès")),
                ('preferred_visit_days', models.CharField(blank=True, max_length=100, null=True, verbose_name='Jours préférés')),
                ('preferred_visit_hours', models.CharField(blank=True, max_length=100, null=True, verbose_name='Heures préférées')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes libres')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('gdpr_consent', models.BooleanField(default=False, verbose_name='Consentement RGPD')),
                ('gdpr_consent_date', models.DateTimeField(blank=True, null=True, verbose_name='Date consentement RGPD')),
                ('data_retention_until', models.DateField(blank=True, null=True, verbose_name="Conservation données jusqu'au")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClientSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du site')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('address', models.TextField(verbose_name='Adresse')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Code postal')),
                ('country', models.CharField(default='France', max_length=100, verbose_name='Pays')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('contact_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nom du contact')),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone du contact')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email du contact')),
                ('access_instructions', models.TextField(blank=True, null=True, verbose_name="Instructions d'accès")),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='clients.client')),
            ],
            options={
                'verbose_name': 'Site client',
                'verbose_name_plural': 'Sites clients',
                'ordering': ['client', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ClientNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('phone', 'Appel téléphonique'), ('letter', 'Courrier'), ('meeting', 'Rendez-vous'), ('other', 'Autre')], max_length=20, verbose_name='Type de notification')),
                ('status', models.CharField(choices=[('sent', 'Envoyé'), ('delivered', 'Livré'), ('read', 'Lu'), ('failed', 'Échec'), ('pending', 'En attente')], default='pending', max_length=20, verbose_name='Statut')),
                ('subject', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sujet')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('sent_to', models.CharField(max_length=200, verbose_name='Envoyé à')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Envoyé le')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Livré le')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Lu le')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='clients.client')),
                ('sent_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification client',
                'verbose_name_plural': 'Notifications clients',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('contract', 'Contrat'), ('invoice', 'Facture'), ('plan', 'Plan'), ('photo', 'Photo'), ('report', 'Rapport'), ('certificate', 'Certificat'), ('other', 'Autre')], max_length=20, verbose_name='Type de document')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('file_path', models.CharField(max_length=500, verbose_name='Chemin du fichier')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Taille du fichier (bytes)')),
                ('file_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Type de fichier')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=False, verbose_name='Public')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='clients.client')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document client',
                'verbose_name_plural': 'Documents clients',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(max_length=50, unique=True, verbose_name='Numéro de contrat')),
                ('contract_type', models.CharField(choices=[('maintenance', 'Maintenance'), ('detection', 'Détection de fuites'), ('emergency', 'Urgence'), ('consulting', 'Conseil'), ('other', 'Autre')], max_length=20, verbose_name='Type de contrat')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('active', 'Actif'), ('suspended', 'Suspendu'), ('expired', 'Expiré'), ('terminated', 'Résilié')], default='draft', max_length=20, verbose_name='Statut')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('renewal_date', models.DateField(blank=True, null=True, verbose_name='Date de renouvellement')),
                ('monthly_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Montant mensuel')),
                ('annual_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Montant annuel')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='Devise')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('terms_conditions', models.TextField(blank=True, null=True, verbose_name='Conditions générales')),
                ('special_conditions', models.TextField(blank=True, null=True, verbose_name='Conditions particulières')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='clients.client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_contracts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contrat client',
                'verbose_name_plural': 'Contrats clients',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ClientContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('role', models.CharField(choices=[('primary', 'Contact principal'), ('technical', 'Contact technique'), ('billing', 'Contact facturation'), ('emergency', 'Contact urgence'), ('other', 'Autre')], default='other', max_length=20, verbose_name='Rôle')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Poste')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mobile')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Contact principal')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='clients.client')),
            ],
            options={
                'verbose_name': 'Contact client',
                'verbose_name_plural': 'Contacts clients',
                'ordering': ['client', 'is_primary', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='ClientActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Créé'), ('updated', 'Modifié'), ('deleted', 'Supprimé'), ('viewed', 'Consulté'), ('contacted', 'Contacté'), ('visited', 'Visité'), ('other', 'Autre')], max_length=20, verbose_name='Action')),
                ('description', models.TextField(verbose_name='Description')),
                ('old_values', models.JSONField(blank=True, null=True, verbose_name='Anciennes valeurs')),
                ('new_values', models.JSONField(blank=True, null=True, verbose_name='Nouvelles valeurs')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='clients.client')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Journal d'activité client",
                'verbose_name_plural': "Journaux d'activité clients",
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['client_number'], name='clients_cli_client__d84143_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['name'], name='clients_cli_name_5ab7bc_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['status'], name='clients_cli_status_ce0d15_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['client_type'], name='clients_cli_client__1e0f73_idx'),
        ),
    ]
