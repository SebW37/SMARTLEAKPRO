# Generated by Django 4.2.7 on 2025-09-06 10:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name="Nom de l'équipement")),
                ('category', models.CharField(choices=[('detection', 'Détection'), ('measurement', 'Mesure'), ('documentation', 'Documentation'), ('repair', 'Réparation'), ('safety', 'Sécurité')], max_length=50, verbose_name='Catégorie')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('model', models.CharField(blank=True, max_length=100, verbose_name='Modèle')),
                ('serial_number', models.CharField(blank=True, max_length=100, verbose_name='Numéro de série')),
                ('available', models.BooleanField(default=True, verbose_name='Disponible')),
                ('maintenance_due', models.DateField(blank=True, null=True, verbose_name='Maintenance due')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Emplacement')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Équipement',
                'verbose_name_plural': 'Équipements',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intervention_id', models.CharField(max_length=20, unique=True, verbose_name='ID Intervention')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('scheduled_date', models.DateTimeField(verbose_name='Date planifiée')),
                ('estimated_duration', models.DurationField(verbose_name='Durée estimée')),
                ('priority', models.CharField(choices=[('critical', 'Critique - Gaz, inondation'), ('high', 'Élevée - Eau chaude, chauffage'), ('medium', 'Moyenne - Eau froide'), ('low', 'Faible - Évacuation, maintenance')], default='medium', max_length=20, verbose_name='Priorité')),
                ('status', models.CharField(choices=[('scheduled', 'Planifiée'), ('confirmed', 'Confirmée'), ('in_progress', 'En cours'), ('completed', 'Terminée'), ('cancelled', 'Annulée'), ('postponed', 'Reportée')], default='scheduled', max_length=20, verbose_name='Statut')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('address_notes', models.TextField(blank=True, verbose_name="Notes d'adresse")),
                ('actual_start_time', models.DateTimeField(blank=True, null=True, verbose_name='Heure de début réelle')),
                ('actual_end_time', models.DateTimeField(blank=True, null=True, verbose_name='Heure de fin réelle')),
                ('findings', models.TextField(blank=True, verbose_name='Découvertes')),
                ('recommendations', models.TextField(blank=True, verbose_name='Recommandations')),
                ('client_notes', models.TextField(blank=True, verbose_name='Notes client')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client', verbose_name='Client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_interventions', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('equipment_needed', models.ManyToManyField(blank=True, to='interventions.equipment', verbose_name='Équipements nécessaires')),
            ],
            options={
                'verbose_name': 'Intervention',
                'verbose_name_plural': 'Interventions',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='LeakType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du type de fuite')),
                ('description', models.TextField(verbose_name='Description')),
                ('severity_level', models.IntegerField(choices=[(1, 'Faible'), (2, 'Moyenne'), (3, 'Élevée'), (4, 'Critique')], default=2, verbose_name='Niveau de gravité')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Type de fuite',
                'verbose_name_plural': 'Types de fuites',
                'ordering': ['severity_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='InterventionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('preliminary', 'Rapport préliminaire'), ('final', 'Rapport final'), ('follow_up', 'Rapport de suivi')], default='final', max_length=20, verbose_name='Type de rapport')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du rapport')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('summary', models.TextField(verbose_name='Résumé')),
                ('recommendations', models.TextField(verbose_name='Recommandations')),
                ('next_steps', models.TextField(blank=True, verbose_name='Prochaines étapes')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='interventions/reports/%Y/%m/%d/', verbose_name='Fichier PDF')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('intervention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='interventions.intervention', verbose_name='Intervention')),
            ],
            options={
                'verbose_name': "Rapport d'intervention",
                'verbose_name_plural': "Rapports d'intervention",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InterventionPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='interventions/photos/%Y/%m/%d/', verbose_name='Photo')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Légende')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Localisation')),
                ('taken_at', models.DateTimeField(auto_now_add=True, verbose_name='Pris le')),
                ('is_before', models.BooleanField(default=False, verbose_name='Photo avant intervention')),
                ('is_after', models.BooleanField(default=False, verbose_name='Photo après intervention')),
                ('intervention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='interventions.intervention', verbose_name='Intervention')),
            ],
            options={
                'verbose_name': "Photo d'intervention",
                'verbose_name_plural': "Photos d'intervention",
                'ordering': ['-taken_at'],
            },
        ),
        migrations.AddField(
            model_name='intervention',
            name='leak_types',
            field=models.ManyToManyField(blank=True, to='interventions.leaktype', verbose_name='Types de fuites'),
        ),
        migrations.AddField(
            model_name='intervention',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.clientsite', verbose_name='Site'),
        ),
        migrations.AddField(
            model_name='intervention',
            name='team_members',
            field=models.ManyToManyField(blank=True, related_name='intervention_team', to=settings.AUTH_USER_MODEL, verbose_name='Équipe'),
        ),
        migrations.AddField(
            model_name='intervention',
            name='technician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_interventions', to=settings.AUTH_USER_MODEL, verbose_name='Technicien principal'),
        ),
        migrations.CreateModel(
            name='TechnicianAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('start_time', models.TimeField(verbose_name='Heure de début')),
                ('end_time', models.TimeField(verbose_name='Heure de fin')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponible')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to=settings.AUTH_USER_MODEL, verbose_name='Technicien')),
            ],
            options={
                'verbose_name': 'Disponibilité technicien',
                'verbose_name_plural': 'Disponibilités techniciens',
                'ordering': ['date', 'start_time'],
                'unique_together': {('technician', 'date', 'start_time')},
            },
        ),
    ]
